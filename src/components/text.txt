Modal de componente terminales



         <Modal
              title="AÃ±adiendo nueva terminal"
              elementFabricante={
                <>
                  <div className="row">
                    <div className="col">
                      <h6>Fabricante:</h6>
                    </div>
                    <div className="col">
                      <input
                        type="text"
                        className="form-control"
                        placeholder="Nombre del fabricante"
                      />
                    </div>
                  </div>
                  <br />
                </>
              }
              elementNombreTerminal={
                <>
                  <div className="row">
                    <div className="col">
                      <h6>Nombre:</h6>
                    </div>
                    <div className="col">
                      <input
                        type="text"
                        className="form-control"
                        placeholder="Nombre de terminal"
                      />
                    </div>
                  </div>
                  <br />
                </>
              }
              elementEstadoTerminal={
                <>
                  <div className="row">
                    <div className="col">
                      <h6>Estado:</h6>
                    </div>
                    <div className="col">
                      <select className="form-select">
                        <option>Activo</option>
                        <option>Inactivo</option>
                      </select>
                    </div>
                  </div>
                  <br />
                </>
              }
              elementAreaTerminal={
                <>
                  <div className="row">
                    <div className="col">
                      <h6>&Aacute;rea:</h6>
                    </div>
                    <div className="col">
                      <select className="form-select">
                        <option>Fumar</option>
                        <option>No fumar</option>
                      </select>
                    </div>
                  </div>
                  <br />
                </>
              }
              elementProgramaTerminal={
                <>
                  <div className="row">
                    <div className="col">
                      <h6>Programa:</h6>
                    </div>
                    <div className="col">
                      <input
                        type="text"
                        className="form-control"
                        placeholder="Programa de terminal"
                      />
                    </div>
                  </div>
                  <br />
                </>
              }
              elementNumeroSerie={
                <>
                  <div className="row">
                    <div className="col">
                      <h6>Serie:</h6>
                    </div>
                    <div className="col">
                      <input
                        type="text"
                        className="form-control"
                        placeholder="Numero serie"
                      />
                    </div>
                  </div>
                </>
              }
            />



Firebase

//DB Firestore
import {
  doc,
  collection,
  getDocs,
  getDoc,
  deleteDoc,
  addDoc
} from "firebase/firestore";
//Connection db
import { db } from "../firebaseConfig/firebase";
import { useHistory } from "react-router-dom";

  //1 Configuramos los hooks
  const [terminales, setTerminales] = useState([]);

  //2 Referenciamos a la Db firestore
  const terminalesCollection = collection(db, "terminales");

  //3 Funcion para mostrar todos los docs
  const getTerminales = async () => {
    /* Formato del video */
    const data = await getDocs(terminalesCollection);
    console.log(data.docs);
    setTerminales(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));
    console.log("Formato del video " + terminales);
    /* Formato del video */

    /*Formato documentacion firebase */
    const querySnapshot = await getDocs(collection(db, "terminales"));
    querySnapshot.forEach((doc) => {
      // doc.data() is never undefined for query doc snapshots
      console.log(
        "Formato documentacion Firebase " + doc.id,
        " => ",
        doc.data()
      );
    });
    /*Formato documentacion firebase */
  };
  //4 Funcion para eliminar un doc
  const deleteTerminal = async (id) => {
    const terminalDoc = doc(db, "terminales", id);
    await deleteDoc(terminalDoc);
    getTerminales();
  };
  //5 Usamos useEffect
  useEffect(() => {
    getTerminales();
    //eslint-disable-next-line
  }, []);


  //Create
  const [fabricante , setFabricante] = useState('')
  const [home , setHome] = useState(0)
  const [estado , setEstado] = useState('')
  const [area , setArea] = useState('')
  const [programa , setPrograma] = useState('')
  const [serie , setSerie] = useState('')
  const history = useHistory();
  //referencia a coleccion
  const terminalesCollectionAdd = collection(db, "terminales");
  //funcion almacenar
  const store = async (e) =>{
    e.preventDefault()
    await addDoc( terminalesCollectionAdd , { fabricante: fabricante , home: home , estado: estado , area: area , programa: programa , serie: serie})
    /* useHistory('/terminales') */
    
  }

  Vista
  <input
                          value={home}
                          onChange={(e) => setHome(e.target.value)}
                          type="text"
                          className="form-control"
                          placeholder="Nombre de terminal"
                        />